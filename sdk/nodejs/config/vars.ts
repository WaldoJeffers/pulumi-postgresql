// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

let __config = new pulumi.Config("postgresql");

/**
 * Maximum wait for connection, in seconds. Zero or not specified means wait indefinitely.
 */
export let connectTimeout: number | undefined = __config.getObject<number>("connectTimeout");
/**
 * The name of the database to connect to in order to conenct to (defaults to `postgres`).
 */
export let database: string | undefined = __config.get("database");
/**
 * Database username associated to the connected user (for user name maps)
 */
export let databaseUsername: string | undefined = __config.get("databaseUsername");
/**
 * Specify the expected version of PostgreSQL.
 */
export let expectedVersion: string | undefined = __config.get("expectedVersion");
/**
 * Name of PostgreSQL server address to connect to
 */
export let host: string | undefined = __config.get("host");
/**
 * Maximum number of connections to establish to the database. Zero means unlimited.
 */
export let maxConnections: number | undefined = __config.getObject<number>("maxConnections");
/**
 * Password to be used if the PostgreSQL server demands password authentication
 */
export let password: string | undefined = __config.get("password");
/**
 * The PostgreSQL port number to connect to at the server host, or socket file name extension for Unix-domain connections
 */
export let port: number | undefined = __config.getObject<number>("port");
export let sslMode: string | undefined = __config.get("sslMode");
/**
 * This option determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the
 * PostgreSQL server
 */
export let sslmode: string | undefined = __config.get("sslmode");
/**
 * Specify if the user to connect as is a Postgres superuser or not.If not, some feature might be disabled (e.g.:
 * Refreshing state password from Postgres)
 */
export let superuser: boolean | undefined = __config.getObject<boolean>("superuser");
/**
 * PostgreSQL user name to connect as
 */
export let username: string | undefined = __config.get("username");
